PROJECT(libQuetzalDataKit)

CMAKE_MINIMUM_REQUIRED(VERSION 3.0.1)

include (GenerateExportHeader)
set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOMOC ON)
CMAKE_POLICY(SET CMP0043 NEW)

#simple and easy library to sync xml.
IF (NOT LIB_MAJOR)
    SET(LIB_MAJOR 0)
ENDIF (NOT LIB_MAJOR)

IF (NOT LIB_MINOR)
    SET(LIB_MINOR 7)
ENDIF (NOT LIB_MINOR)

IF (NOT LIB_RELEASE)
    SET(LIB_RELEASE 1)
ENDIF (NOT LIB_RELEASE)

IF (NOT QUETZAL_DATA_KIT_LIBRARY )
    SET(QUETZAL_DATA_KIT_LIBRARY  QuetzalDataKit)
ENDIF (NOT QUETZAL_DATA_KIT_LIBRARY )

IF (NOT CMAKE_INSTALL_LIBDIR)
    INCLUDE(GNUInstallDirs)
ENDIF (NOT CMAKE_INSTALL_LIBDIR)

INCLUDE_DIRECTORIES (
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${CMAKE_CURRENT_BINARY_DIR}
)

# Find Qt5
IF (NOT Qt5Core_FOUND)
    FIND_PACKAGE(Qt5Core REQUIRED)
    FIND_PACKAGE(Qt5Widgets REQUIRED)
    FIND_PACKAGE(Qt5Xml REQUIRED)

    SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS})
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")

    # TODO/FIXME: -DPLEXYCORE_STANDALONE is stuff to be resolved!
    MESSAGE(WARNING "\n\nBuilding lib as a minimal standalone library. Non-functional for plexydesk now!\n\n")
    SET(PLEXYCORE_STANDALONE 1)
    ADD_DEFINITIONS(-DPLEXYCORE_STANDALONE)
ENDIF (NOT Qt5Core_FOUND)

# do not use config.h now
ADD_DEFINITIONS(-DPLEXYPREFIX="${CMAKE_INSTALL_PREFIX}"
                -DPLEXYLIBDIR="${CMAKE_INSTALL_LIBDIR}"
                -DPLEXYQTIMPORTSDIR="${QT_IMPORTS_INSTALL_DIR}"
                -DPLEXYRESOURCESDIR="${RESOURCES_DEST_DIR}"
               )

SET(sourceFiles
    image_io.cpp
    datasync.cpp
    syncobject.cpp
    syncengineinterface.cpp
    memorysyncengine.cpp
    disksyncengine.cpp
    px_bench_impl.cpp
   )

SET(headerFiles
    image_io.h
    datasync.h
    syncobject.h
    memorysyncengine.h
    syncengineinterface.h
    disksyncengine.h
    px_bench.h
   )

IF (APPLE)
   INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
   FIND_LIBRARY(COCOA_LIBRARY Cocoa)
   FIND_LIBRARY(GLUT_LIBRARY GLUT)
   FIND_LIBRARY(OpenGL_LIBRARY OpenGL)
   MARK_AS_ADVANCED (COCOA_LIBRARY
                     GLUT_LIBRARY
                     OpenGL_LIBRARY)
   SET(MAC_LIBS ${COCOA_LIBRARY} ${GLUT_LIBRARY} ${OpenGL_LIBRARY})
ENDIF(APPLE)

SET(sourceFiles ${sourceFiles} ${headerFiles})

ADD_LIBRARY(${QUETZAL_DATA_KIT_LIBRARY} SHARED ${sourceFiles})


IF(APPLE)
    SET_TARGET_PROPERTIES(${QUETZAL_DATA_KIT_LIBRARY} PROPERTIES FRAMEWORK 1)
endif(APPLE)


GENERATE_EXPORT_HEADER( ${QUETZAL_DATA_KIT_LIBRARY}
             BASE_NAME ${QUETZAL_DATA_KIT_LIBRARY}
             EXPORT_MACRO_NAME ${QUETZAL_DATA_KIT_LIBRARY}_EXPORT
             EXPORT_FILE_NAME ${QUETZAL_DATA_KIT_LIBRARY}_export.h
             STATIC_DEFINE ${QUETZAL_DATA_KIT_LIBRARY}_BUILT_AS_STATIC
)

IF(MINGW OR WIN32)
    SET_TARGET_PROPERTIES(${QUETZAL_DATA_KIT_LIBRARY} PROPERTIES
        IMPORT_SUFFIX ".lib"
        IMPORT_PREFIX ""
        PREFIX ""
   )
ENDIF(MINGW OR WIN32)

TARGET_LINK_LIBRARIES(${QUETZAL_DATA_KIT_LIBRARY} ${MAC_LIBS} ${libs})

QT5_USE_MODULES(${QUETZAL_DATA_KIT_LIBRARY} Core Widgets Xml)


IF (NOT APPLE)
    INSTALL(TARGETS ${QUETZAL_DATA_KIT_LIBRARY} DESTINATION ${CMAKE_INSTALL_LIBDIR})
ENDIF(NOT APPLE)

IF (APPLE)
   INSTALL(TARGETS ${QUETZAL_DATA_KIT_LIBRARY}
                    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
                    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
                    FRAMEWORK DESTINATION plexydesk.app/Contents/Frameworks)
   SET_TARGET_PROPERTIES(${QUETZAL_DATA_KIT_LIBRARY} PROPERTIES SKIP_BUILD_RPATH 1)
ENDIF(APPLE)


